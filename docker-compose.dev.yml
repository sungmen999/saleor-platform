version: "3.3"

services:
  traefik:
    image: traefik:2.4.13
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.letsencrypt.acme.email=dkapparel2020@gmail.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - 443:443
      - 80:8080
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - web
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.proxy.rule=Host:proxy.dkapparel.store"
      - "traefik.http.routers.proxy.entrypoints=websecure"
      - "traefik.http.routers.proxy.tls=true"
      - "traefik.http.routers.proxy.tls.certresolver=letsencrypt"
      - "traefik.http.routers.proxy.tls.domains[0].main=dkapparel.store"
      - "traefik.http.routers.proxy.tls.domains[0].sans=*.dkapparel.store"
      - "traefik.http.services.proxy.loadbalancer.server.port=8000"

  api:
    build:
      context: ./saleor
      dockerfile: ./Dockerfile
      args:
        - STATIC_URL=/static/
    restart: unless-stopped
    networks:
      - web
      - internal
    depends_on:
      - db
      - redis
      - jaeger
    volumes:
      - ./saleor/saleor/:/app/saleor:Z
      - ./saleor/templates/:/app/templates:Z
      - ./saleor/tests/:/app/tests
      # shared volume between worker and api for media
      - saleor-media:/app/media
    command: python manage.py runserver 0.0.0.0:8000
    env_file: common.env
    environment:
      - STOREFRONT_URL=https://dkapparel.store/
      - DASHBOARD_URL=https://backoffice.dkapparel.store/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host:api.dkapparel.store"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.routers.api.tls.domains[0].main=dkapparel.store"
      - "traefik.http.routers.api.tls.domains[0].sans=*.dkapparel.store"
      - "traefik.http.services.api.loadbalancer.server.port=8000"

  storefront:
    build:
      context: ./saleor-storefront
      dockerfile: ./Dockerfile
    restart: unless-stopped
    networks:
      - web
      - internal
    volumes:
      - ./saleor-storefront/:/app:cached
      - /app/node_modules/
    command: npm start -- --hostname 0.0.0.0
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.storefront.rule=Host:dkapparel.store"
      - "traefik.http.routers.storefront.entrypoints=websecure"
      - "traefik.http.routers.storefront.tls=true"
      - "traefik.http.routers.storefront.tls.certresolver=letsencrypt"
      - "traefik.http.routers.storefront.tls.domains[0].main=dkapparel.store"
      - "traefik.http.routers.storefront.tls.domains[0].sans=*.dkapparel.store"
      - "traefik.http.services.api.storefront.server.port=8100"

  backoffice:
    build:
      context: ./saleor-dashboard
      dockerfile: ./Dockerfile
      args:
        - API_URI=https://api.dkapparel.store/graphql/
        - APP_MOUNT_URI=/
        - STATIC_URL=/
    restart: unless-stopped
    networks:
      - web
      - internal
    volumes:
      - ./saleor-dashboard/:/app:cached
      - /app/node_modules/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backoffice.rule=Host:backoffice.dkapparel.store"
      - "traefik.http.routers.backoffice.entrypoints=websecure"
      - "traefik.http.routers.backoffice.tls=true"
      - "traefik.http.routers.backoffice.tls.certresolver=letsencrypt"
      - "traefik.http.routers.backoffice.tls.domains[0].main=dkapparel.store"
      - "traefik.http.routers.backoffice.tls.domains[0].sans=*.dkapparel.store"
      - "traefik.http.services.backoffice.storefront.server.port=8200"

  db:
    image: library/postgres:11.1-alpine
    ports:
      - 5432:5432
    restart: unless-stopped
    networks:
      - internal
    volumes:
      - saleor-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=saleor
      - POSTGRES_PASSWORD=saleor

  redis:
    image: library/redis:5.0-alpine
    ports:
      - 6379:6379
    restart: unless-stopped
    networks:
      - internal
    volumes:
      - saleor-redis:/data

  worker:
    build:
      context: ./saleor
      dockerfile: ./Dockerfile
      args:
        STATIC_URL: "/static/"
    command: celery -A saleor --app=saleor.celeryconf:app worker --loglevel=info
    restart: unless-stopped
    networks:
      - internal
    env_file: common.env
    depends_on:
      - redis
      - mailhog
    volumes:
      - ./saleor/saleor/:/app/saleor:Z,cached
      - ./saleor/templates/:/app/templates:Z,cached
      # shared volume between worker and api for media
      - saleor-media:/app/media

  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    restart: unless-stopped
    networks:
      - internal

  mailhog:
    image: mailhog/mailhog
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui. Visit http://localhost:8025/ to check emails
    restart: unless-stopped
    networks:
      - web
      - internal

volumes:
  saleor-db:
    driver: local
  saleor-redis:
    driver: local
  saleor-media:

networks:
  web:
    external: true
  internal:
    external: false